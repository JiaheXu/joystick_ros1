<launch>
  <arg name="sim"           default="false" />
  <arg name="headless"      default="true" />
  <arg name="system_id"     default="$(optenv MMPUG_SYSTEM_ID rc1)" />
  <arg name="system_type"   default="$(optenv MMPUG_SYSTEM_TYPE rc)" />
  <arg name="tf_prefix"     default="$(arg system_id)_" />
  <arg name="namespace"     default="/$(arg system_id)" />
  <arg name="output"        default="screen" />
  <arg name="mavlink_port"  default="14570" />

  <arg name="launch_local_planner" default="$(eval system_type == 'rc')" />
  <arg name="launch_spot_planner" default="$(eval system_type == 'spot')"/>
  <arg name="launch_autonomy_executive" default="true" />
  <arg name="launch_convoy_interface" default="true" />
  <arg name="launch_command_interface" default="$(arg launch_autonomy_executive)" />
  <arg name="launch_joystick_command" default="$(arg launch_command_interface)" />
  <arg name="launch_ilqr" default="true" />
  <arg name="launch_path_follower" default="$(eval not launch_ilqr)" />
  <arg name="launch_exploration" default="true" />
  <arg name="launch_far_planner" default="false" />
  <arg name="launch_terrain_analysis" default="$(arg launch_far_planner)" />
  <arg name="launch_transform_manager" default="true" />
  <arg name="launch_mavlink" default="false" />
  <arg name="enable_mavros_timeout" default="true" />
  <arg name="grid_res" default="0.2" />
  <arg name="launch_imu_imitate" default="true" />

  <arg name="joystick_speed" default="1.5" />
  <arg name="exploration_speed" default="1.5" />
  <arg name="waypoint_speed" default="1.5" />
  <arg name="manual_speed" default="2.0" />
  <arg name="control_offset" default="0.0" />

  <arg name="sensorOffsetX" default="-0.25"/>
  <arg name="sensorOffsetY" default="0"/>

  <param name="/use_sim_time" value="$(arg sim)" />

  <group ns="$(arg namespace)">

    <include file="$(find dsvp_launch)/launch/explore.launch" if="$(arg launch_exploration)">
      <arg name="sim" value="$(arg sim)" />
      <arg name="headless" value="$(arg headless)" />
      <arg name="output" value="$(arg output)" />
      <arg name="world_frame" value="$(arg tf_prefix)map" />
      <arg name="vehicle_frame" value="$(arg tf_prefix)sensor" />
      <arg name="sensor_at_scan_frame" value="$(arg tf_prefix)sensor_at_scan" />
    </include>

    <include file="$(find terrain_analysis_large)/launch/terrain_analysis_large_$(arg system_type).launch" if="$(arg launch_exploration)">
      <arg name="sim"           value="$(arg sim)" />
      <arg name="output"        value="$(arg output)" />
      <arg name="registered_cloud_frame" value="$(arg tf_prefix)sensor_init_rot" />
      <arg name="registered_cloud_frame_imu" value="$(arg tf_prefix)sensor_init" />
      <arg name="system_type" value="$(arg system_type)"/>
    </include>

    <include file="$(find far_planner)/launch/far_planner.launch" if="$(arg launch_far_planner)">
      <arg name="system_type" value="$(arg system_type)" />
      <arg name="system_id" value="$(arg system_id)" />
      <arg name="robot_frame_id" value="$(arg tf_prefix)sensor_init" />
      <arg name="robot_map_frame" value="$(arg tf_prefix)map" />
      <arg name="config" value="$(arg system_type)_config" />
    </include>
    
    <include file="$(find terrain_analysis)/launch/terrain_analysis_$(arg system_type).launch" if="$(arg launch_terrain_analysis)">
      <arg name="sim"           value="$(arg sim)" />
      <arg name="output"        value="$(arg output)" />
      <arg name="registered_cloud_frame" value="$(arg tf_prefix)sensor_init_rot" />
      <arg name="registered_cloud_frame_imu" value="$(arg tf_prefix)sensor_init" />
    </include>

    <include file="$(find local_planner)/launch/local_planner.launch" if="$(arg launch_local_planner)">
      <arg name="sim"           value="$(arg sim)" />
      <arg name="output"        value="$(arg output)" />
      <arg name="run_follower" value="$(arg launch_path_follower)" />
      <arg name="use_terrain_analysis" value="$(arg launch_terrain_analysis)" />
      <arg name="sensor_frame" value="$(arg tf_prefix)sensor" />
      <arg name="sensor_init_frame" value="$(arg tf_prefix)sensor_init" />
      <arg name="vehicle_frame" value="$(arg tf_prefix)vehicle" />
      <arg name="sensorOffsetX" value="$(arg control_offset)" />
      <arg name="system_id" value="$(arg system_id)" />
    </include>

    <include file="$(find local_planner)/launch/spot_planner.launch" if="$(arg launch_spot_planner)">
      <arg name="sim"           value="$(arg sim)" />
      <arg name="output"        value="$(arg output)" />
      <arg name="use_terrain_analysis" value="$(arg launch_terrain_analysis)" />
      <arg name="sensor_frame" value="$(arg tf_prefix)sensor" />
      <arg name="sensor_init_frame" value="$(arg tf_prefix)sensor_init" />
      <arg name="vehicle_frame" value="$(arg tf_prefix)vehicle" />
      <arg name="sensorOffsetX" value="$(arg control_offset)" />
      <arg name="system_id" value="$(arg system_id)" />
    </include>

    <node name="ilqr_controller" pkg="ilqr_controller" type="main" if="$(arg launch_ilqr)" output="$(arg output)" respawn="false">
      <param name="frame_id" value="$(arg tf_prefix)sensor_init" />
      <param name="frame_offset" value="$(arg control_offset)" />
      <param name="steering_cost" value="10" />
      <param name="steering_cost_rev_add" value="15" />
      <param name="steering_cost_kp_vel" value="20" />
      <param name="accel" value="6.0" />
      <param name="decel" value="-6.0" />
    </node>

    <node name="local_joystick_control" pkg="autonomy_executive" type="local_joystick_command" if="$(arg launch_joystick_command)" output="$(arg output)">
      <arg name="authority_name" value="$(arg system_id)/joystick" />
    </node>

    <node name="control_interface" pkg="autonomy_executive" type="command_interface" if="$(arg launch_command_interface)" output="$(arg output)">
      <param name="system_id" value="$(arg system_id)" />
    </node>

    <node name="behavior_executive" pkg="mmpug_behavior_executive" type="behavior_executive_node" if="$(arg launch_autonomy_executive)" output="$(arg output)">
      <param name="execute_target" type="double" value="5."/>
      <!-- different speeds... -->
      <param name="joystick_speed" value="$(arg joystick_speed)" />
      <param name="exploration_speed" value="$(arg exploration_speed)" />
      <param name="waypoint_speed" value="$(arg waypoint_speed)" />
      <param name="manual_speed" value="$(arg manual_speed)" />
      <param name="system_type" value="$(arg system_type)" />
      <param name="system_id" value="$(arg system_id)" />

      <!-- Low pass filter for joystick noise -->
      <param name="turning_radius_degrees" value="30" />
      <param name="joystick_noise_deadband" value="0.02" />
      <!-- Timeout to changing state -->
      <param name="state_change_timeout" value="0" />
      <param name="enable_mavros_timeout" value="$(arg enable_mavros_timeout)" />
      <param name="waypoint_death_on_exit" value="false" />
      <param name="waypoint_mode_timeout" value="30." />
      <param name="turn_around_failure_timeout" value="20." />

      <!-- Far planner params -->
      <param name="enable_far_planner" value="$(arg launch_far_planner)" />
      <param name="robot_frame_id" value="$(arg tf_prefix)sensor_init" />

      <param name="sensorOffsetX" value="$(arg control_offset)"/>
      <param name="sensorOffsetY" value="$(arg sensorOffsetY)"/>
    </node>

    <node name="behavior_tree" pkg="behavior_tree" type="behavior_tree_implementation">
      <param name="config" type="string" value="$(find behavior_tree)/config/example.tree" />
      <param name="only_publish_on_change" type="bool" value="false" />
    </node>

    <include file="$(find map_compress)/launch/map_sender.launch">
      <arg name="output" value="$(arg output)" />
      <arg name="frame_id" value="global" />
      <arg name="grid_res" value="$(arg grid_res)"/>
    </include>

    <node name="system_monitor" pkg="system_stats" type="system_monitor.py">
        <param name="pub_nodes" type="bool" value="false" />
        <param name="pub_dead_nodes" type="bool" value="false" />
        <param name="separate_stats" type="bool" value="true" />
    </node>

    <node name="transform_manager" pkg="mmpug_visualization" type="transform_manager.py" output="$(arg output)" if="$(arg launch_transform_manager)">
        <param name="system_id" value="$(arg system_id)" />
        <param name="system_type" value="$(arg system_type)" />
        <param name="publish_transforms" value="true" />
        <param name="update_hz" value="1" />
        <param name="sync_hosts" value="true" />
    </node>

    <node name="odom_manager" pkg="mmpug_visualization" type="odom_manager" output="$(arg output)">
        <param name="map_frame_id" value="$(arg tf_prefix)map" />
        <param name="global_frame_id" value="global" />
        <param name="update_hz" value="200" />
    </node>

    <node name="mavlink_interface" pkg="autonomy_executive" type="mavlink_command" output="$(arg output)" if="$(arg launch_mavlink)">
      <param name="connection_port" value="$(arg mavlink_port)" />
    </node>

    <node name="convoy_interface" pkg="autonomy_executive" type="convoy_interface.py" if="$(arg launch_convoy_interface)" output="$(arg output)">
      <param name="system_id" value="$(arg system_id)" />
    </node>

    <node name="imu_imitate" pkg="autonomy_executive" type="imu_imitate.py" if="$(arg launch_imu_imitate)" output="$(arg output)">
    </node>
  
  </group>
</launch>
